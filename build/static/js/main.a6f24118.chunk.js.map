{"version":3,"sources":["components/AddForm.js","components/SearchFilter.js","services/persons.js","components/Contact.js","components/Notification.js","App.js","index.js"],"names":["AddForm","props","onSubmit","addName","value","newName","onChange","handleNameInput","newNumber","handleNumberInput","type","SearchFilter","search","handleSearch","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","changedPerson","put","Contact","person","deletePerson","name","number","onClick","Notification","message","style","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","notificationMessage","setNotificationMessage","notificationStyle","setNotificationStyle","useEffect","personService","filteredSearch","filter","toLowerCase","includes","event","target","preventDefault","map","window","confirm","find","element","setTimeout","newObject","concat","catch","error","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6f24118.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddForm = (props) =>\n{\n  return(\n  \n  <form onSubmit={props.addName}>\n    <div>name: <input value={props.newName} onChange={props.handleNameInput}/></div>\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberInput}/></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n\n  )\n\n}\n\nexport default AddForm","import React from 'react'\n\nconst SearchFilter = (props) =>\n{\n  return(\n    <div>\n      filter shown with <input value={props.search} onChange={props.handleSearch}/>\n    </div>\n  )\n}\n\nexport default SearchFilter","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () =>\n{\n    const request = axios.get(baseUrl)\n\n    return(request.then(response => response.data))\n}\n\nconst addPerson = (newPerson) =>\n{\n    const request = axios.post(baseUrl, newPerson)\n\n    return(request.then(response => response.data))\n}\n\nconst deletePerson = (id) =>\n{\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return(request.then(response => response.data))\n\n}\n\nconst updatePerson = (changedPerson) =>\n{\n    const request = axios.put(`${baseUrl}/${changedPerson.id}`, changedPerson)\n\n    return(request.then(response => response.data))\n}\n\n\n\nexport default { getAll , addPerson, deletePerson , updatePerson}","import React from 'react'\n\nconst Contact = ({person , deletePerson}) => {\n    return (\n      <p>{person.name} {person.number} <button onClick={deletePerson}>delete</button></p>\n    )\n  }\n\nexport default Contact","import React from 'react'\n\nconst Notification = ({ message , style}) => {\n\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={style}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState , useEffect} from 'react'\nimport AddForm from './components/AddForm'\nimport SearchFilter from './components/SearchFilter'\nimport personService from './services/persons'\nimport Contact from './components/Contact'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationStyle , setNotificationStyle] = useState('success')\n\n  useEffect(() => {\n    personService.getAll().then(response => setPersons(response))\n  }, [])\n\n  const handleSearch = (event) => setSearch(event.target.value)\n  const handleNameInput = (event) => setNewName(event.target.value)\n  const handleNumberInput = (event) => setNewNumber(event.target.value)\n\n  const addName = (event) => {\n\n    event.preventDefault()\n    var names = persons.map(persons => persons.name)\n \n    if (names.includes(newName) === true)\n    {\n      if(window.confirm(`${newName} is already added to phonebook. Want to update number?`))\n      {\n        var person = persons.find(element => element.name === newName)\n        var newPerson = {...person , number : newNumber}\n\n        personService.updatePerson(newPerson).then(response => \n          {setPersons(persons.map(person => person.id === newPerson.id ? response : person))})\n\n        setNotificationStyle('success')\n        setNotificationMessage(`${newPerson.name} was successfully updated`)\n        \n        setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n      }     \n    }\n\n\n    else\n    {\n      var newObject = {name : newName , number: newNumber}\n\n        personService.addPerson(newObject)\n          .then(response => {\n            setPersons(persons.concat(response))\n            setNewName('')\n            setNewNumber('')\n            setNotificationStyle('success')\n            setNotificationMessage(`${newObject.name} was successfully added`)        \n            setTimeout(() => setNotificationMessage(null), 5000)\n          })\n          .catch(error => {\n            setNotificationStyle('error')\n            setNotificationMessage(error.response.data.error)\n            setTimeout(() => setNotificationMessage(null), 5000)\n\n\n          })\n          \n        \n    }\n  }\n\n  const deletePerson = (id) =>\n  {\n    const name = persons.find(element => element.id === id).name\n\n    if(window.confirm(`Delete ${name}?`))\n    {\n       personService.deletePerson(id).catch(() => {\n                                                    setNotificationStyle('error')\n                                                    setNotificationMessage(`'${name}' was already removed from server`)\n                                                    setTimeout(() => setNotificationMessage(null), 5000)\n                                                  })\n\n       setPersons(persons.filter(element => element.id !== id))\n    }\n  }\n\n\n  const filteredSearch = persons.filter(persons => (persons.name).toLowerCase().includes(search.toLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification style={notificationStyle} message={notificationMessage} />\n\n\n      <SearchFilter search={search} handleSearch={handleSearch}/>      \n      \n      <h2>add a new</h2>\n\n      <AddForm \n          addName={addName} \n          newName={newName} \n          handleNameInput={handleNameInput} \n          newNumber={newNumber}\n          handleNumberInput={handleNumberInput}\n      /> \n         \n      <h2>Numbers</h2>\n      {filteredSearch.map(person => <Contact key={person.id} person={person} deletePerson={() => deletePerson(person.id)}/>)}    \n  </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}